<?xml version="1.0" encoding="UTF-8" ?>
<!-- /src/mapper/StudentMapper1.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
	<select id="count" resultType="int">
		select count(*) from student
	</select>
	<select id="list" resultType="Student">
		select * from student
	</select>
	<insert id="insert" parameterType="Student">
		insert into student (studno, name, grade, id, jumin, major1) value (#{studno}, #{name}, #{grade}, #{id}, #{jumin}, #{major1})
	</insert>
	<update id="update" parameterType="map">  <!-- 타입을 map으로 넣어도 되는건 내부적으로 alias 설정되어 있음. 변수의 이름이 아님. -->
		update student set jumin=#{jumin} where studno=#{no}  <!-- jumin, no는 키값. 이 키에 해당하는 value를 가져옴. -->  <!-- #{} : 자료형을 다르게 써줘도 db로 넘어가면서 자동 형변환 해줌. db에서 해주는 것. ""로 자동으로 묶어줌. -->
	</update>
	<select id="selectone" parameterType="int" resultType="Student">
		select * from student where studno=#{no}  <!-- 이 때에는 아무거나 넣어주면 됨. -->
	</select>
	<select id="selectname" parameterType="string" resultType="Student">
		select * from student where name like '${value}%'  <!-- 문자열 받아올 때에는 '${value}'로 써줘야 함. #{} 표현은 db로 넘겨줄 때 자동으로 ""로 묶어서 넘김. -->
	</select>
<!-- 
	#{value} : 값 + 자료형 인식. -> 보안성이 좋다.
	${value} : 단순히 값으로 치환. 꼭 value로 써줘야 함. 문자형 인식을 위해서는 ''로 묶어줘야 함.
 -->
 
	<select id="selectcol" parameterType="map" resultType="Student">
		select * from student where ${col1} = #{val1} and ${col2} >= #{val2}  <!-- 컬럼명에는 자료형이 필요 없으니까 ${} -->
	</select>
	<delete id="delete" parameterType="int">
		delete from student where studno = #{no}
	</delete>
</mapper>